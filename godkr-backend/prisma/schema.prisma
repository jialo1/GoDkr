// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  name          String
  profileImage  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  favorites     Place[]   @relation("UserFavorites")
  reviews       Review[]
  communities   Community[] @relation("UserCommunities")
  posts         Post[]
}

model Place {
  id          String    @id @default(uuid())
  name        String
  description String
  category    String
  address     String
  latitude    Float
  longitude   Float
  images      String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  reviews     Review[]
  favoritedBy User[]    @relation("UserFavorites")
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  place     Place    @relation(fields: [placeId], references: [id])
  placeId   String
}

model Community {
  id          String   @id @default(uuid())
  name        String
  description String
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  members     User[]   @relation("UserCommunities")
  posts       Post[]
}

model Post {
  id          String   @id @default(uuid())
  title       String
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  community   Community @relation(fields: [communityId], references: [id])
  communityId String
}

model News {
  id          String   @id @default(uuid())
  title       String
  content     String
  image       String?
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
